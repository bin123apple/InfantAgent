/* src/App.css */
html, body {
  height: 100%; /* Ensure html and body take full viewport height */
  margin: 0;
  padding: 0;
  overflow: hidden; /* Prevent body scroll on desktop; we control scroll within .App */
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #f4f7f6;
  color: #333;
}

.App {
  display: flex;
  flex-direction: column;
  height: 100vh; /* Use 100vh for full viewport height consistently */
  overflow: hidden; /* App itself does not scroll */
}

.App-header {
  background-color: #282c34;
  padding: 8px 15px;
  color: white;
  text-align: center;
  flex-shrink: 0;
  z-index: 10;
}

.App-main {
  display: flex;
  flex-grow: 1;
  overflow: hidden; /* Crucial: App-main manages its space, children scroll */
  min-height: 0; /* For flex context if .App is also flex-column */
}

.left-panel {
  width: 35%;
  padding: 8px;
  box-sizing: border-box;
  border-right: 1px solid #ddd;
  display: flex;
  flex-direction: column;
  background-color: #fff;
  transition: width 0.3s ease;
  overflow: hidden; /* Let .chat-client handle scroll */
  min-height: 0; /* For flex item context */
}

.right-panel-grid-container {
  width: 65%;
  padding: 0;
  box-sizing: border-box;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  gap: 1px;
  background-color: #ddd;
  overflow: hidden; /* Let grid items handle scroll */
  transition: width 0.3s ease;
}

.grid-item {
  background-color: #fff;
  padding: 8px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  overflow: hidden; /* Let specific content areas inside scroll */
  min-height: 0; /* For grid item context, allows shrinking and internal scroll */
}

.grid-item h3 {
  margin-top: 0;
  margin-bottom: 8px;
  font-size: 1em;
  color: #333;
  padding-bottom: 4px;
  border-bottom: 1px solid #eee;
  flex-shrink: 0;
}

/* Component wrappers */
.chat-client,
.terminal-client,
.vm-client,
.planner-client {
  display: flex;
  flex-direction: column;
  height: 100%; /* Fill parent (.left-panel or .grid-item) */
  overflow: hidden; /* Delegate scroll to specific inner areas */
  min-height: 0; /* Allow shrinking within flex/grid parent */
}

/* ChatClient Styles */
.chat-client .messages-area {
  flex-grow: 1;
  padding: 8px;
  margin-bottom: 8px;
  overflow-y: auto; /* SCROLLS HERE */
  background-color: #f9f9f9;
  border-radius: 3px;
  min-height: 50px; /* Important for flex-grow to work correctly */
}
.chat-client .input-area {
  flex-shrink: 0;
}

/* TerminalClient Styles */
.terminal-client .terminal-container-wrapper {
  flex-grow: 1;
  min-height: 100px;
  overflow: hidden; /* Xterm itself will provide scrollbars */
  border-radius: 3px;
  background-color: #1e1e1e;
  position: relative;
}
.terminal-client .terminal-container-wrapper .xterm {
    height: 100% !important;
    width: 100% !important;
}
.terminal-client .terminal-status {
    font-size: 0.8em;
    margin-top: 4px;
    flex-shrink: 0;
}

/* VMClient Styles */
.vm-client .nomachine-iframe-container {
  flex-grow: 1;
  width: 100%;
  min-height: 100px;
  overflow: hidden; /* Iframe handles its own scroll */
}
.vm-client .nomachine-iframe-container iframe {
  width: 100%;
  height: 100%;
  border: none;
}
.vm-client > p, .vm-client ol {
    flex-shrink: 0;
    margin-top: 3px; margin-bottom: 3px; font-size: 0.85em;
}
.vm-client ol { padding-left: 18px; }

/* PlannerClient Styles */
.planner-client .planner-controls { flex-shrink: 0; }
.planner-client button { margin-bottom: 8px; padding: 6px 10px; font-size: 0.9em; }
.planner-client .planner-details-container {
  flex-grow: 1;
  overflow-y: auto; /* SCROLLS HERE */
  padding-right: 3px;
  min-height: 50px; /* Important for flex-grow */
}
.planner-details { background-color: #fff; padding: 0px; border-radius: 3px; }
.planner-details p { margin: 4px 0; font-size: 0.9em; }
.planner-details h4 { margin-top: 8px; margin-bottom: 4px; font-size: 0.95em; }
.planner-details ul { list-style-type: none; padding-left: 0; }
.planner-details li { padding: 4px; font-size: 0.9em; border-bottom: 1px dashed #f0f0f0; }
.planner-details li:last-child { border-bottom: none; }

/* ... (Keep existing .message, .input-area, .vm-client .loading-message styles) ... */
.message { margin-bottom: 6px; padding: 4px 7px; border-radius: 3px; word-wrap: break-word; font-size: 0.95em; }
.message.you { background-color: #e1ffc7; text-align: right; margin-left: auto; max-width: 80%; }
.message.agent { background-color: #f0f0f0; text-align: left; margin-right: auto; max-width: 80%; }
.message.server, .message.system { background-color: #fffacd; font-style: italic; font-size: 0.85em;text-align: center; max-width: 90%; margin-left: auto; margin-right: auto; }
.input-area { display: flex; flex-shrink: 0; }
.input-area input { flex-grow: 1; padding: 7px; border: 1px solid #ccc; border-radius: 3px 0 0 3px; font-size: 0.95em; }
.input-area button { padding: 7px 12px; border: 1px solid #61dafb; background-color: #61dafb; color: white; cursor: pointer; border-radius: 0 3px 3px 0; border-left: none; font-size: 0.95em; }
.input-area button:disabled { background-color: #ccc; border-color: #ccc; cursor: not-allowed; }

.vm-client .loading-message,
.vm-client .error-message { padding: 8px; border-radius: 3px; margin: 8px 0; font-size: 0.85em; flex-shrink: 0;}
.vm-client .loading-message { background-color: #e6f7ff; border: 1px solid #91d5ff; }
.vm-client .error-message { background-color: #fff2f0; border: 1px solid #ffccc7; color: #a8071a; }


/* --- Responsive Adjustments --- */

@media (max-width: 1024px) { /* Tablets and Smaller Desktops */
  .left-panel { width: 40%; }
  .right-panel-grid-container { width: 60%; }
  /* Grid items already use 1fr for rows/cols, so they adapt. min-height helps. */
  .grid-item { padding: 6px; }
  .grid-item h3 { font-size: 0.95em; margin-bottom: 6px; }
}

@media (max-width: 767px) { /* Mobile Phones */
  html, body {
    overflow-y: auto; /* Allow body to scroll as content stacks beyond viewport */
    height: auto; /* Remove fixed height to allow content to define body height */
  }
  .App {
    height: auto; /* App also grows with content */
    min-height: 100vh; /* Ensure it still tries to fill if content is short */
  }
  .App-main {
    flex-direction: column;
    overflow-y: visible; /* Let children define height, body scrolls */
    height: auto;
  }

  .left-panel,
  .right-panel-grid-container {
    width: 100%;
    max-width: 100%; /* Important for preventing horizontal overflow */
    border-right: none;
    height: auto; /* Let content or min/max-height define actual height */
    min-height: 0; /* Reset desktop min-heights if they conflict */
    overflow: visible; /* Let body scroll */
  }

  .left-panel {
    /* Define how tall the chat panel should be on mobile before IT scrolls */
    max-height: 60vh; /* Example: Chat can take up to 60% of screen */
    min-height: 250px; /* But at least this much */
    overflow-y: auto; /* The .left-panel itself will scroll if its content (ChatClient) exceeds max-height */
    border-bottom: 1px solid #ddd;
  }
  /* Ensure .chat-client (and thus .messages-area) correctly uses space within .left-panel */
  .left-panel .chat-client {
      /* height: 100%; -- This might be problematic if left-panel has max-height.
         Let chat-client's flex properties work within the now scrollable left-panel. */
  }


  .right-panel-grid-container {
    grid-template-columns: 1fr; /* Single column */
    grid-template-rows: auto; /* Each item defines its own height */
    height: auto; /* Let children determine total height */
  }

  .grid-item {
    /* Each grid item will stack. Give them a sensible min-height.
       Content inside them should scroll if it exceeds this. */
    min-height: 350px; /* Increased min-height for stacked items to be useful */
    height: auto;      /* Allow them to grow taller if content is larger and not scrollable */
    /* If a grid item's *internal* content is meant to scroll (e.g. terminal),
       its internal scrollable area needs to be correctly set up with flex-grow and overflow:auto */
    overflow: hidden; /* Grid item itself shouldn't scroll, but internal component like terminal should */
  }
  /* Forcing internal scrollable areas in stacked grid items to have enough space */
   .grid-item .terminal-client .terminal-container-wrapper,
   .grid-item .vm-client .nomachine-iframe-container,
   .grid-item .planner-client .planner-details-container {
        min-height: 280px; /* Make sure the actual content area has space */
   }

  /* Global font size adjustments for mobile */
  body { font-size: 15px; /* Slightly larger base for better readability */ }
  .App-header { padding: 6px 10px; font-size: 1em; }
  .message { font-size: 1em; }
  .input-area input, .input-area button { font-size: 1em; }
}